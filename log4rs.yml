refresh_rate: 5 seconds

appenders:
  stdout:
    kind: console
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S)} | {({l}):5.5} | {f}:{L} — {m}{n}"

  info_log:
    kind: rolling_file
    path: "logs/info.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S)} | {({l}):5.5} | {f}:{L} — {m}{n}"
    filters:
      - kind: threshold
        level: info
    policy:
      # Identifies which policy is to be used. If no kind is specified, it will
      # default to "compound".
      kind: compound
      # The remainder of the configuration is passed along to the policy's
      # deserializer, and will vary based on the kind of policy.
      trigger:
        kind: size
        limit: 5mb
      roller:
        kind: fixed_window
        base: 1
        count: 100
        pattern: "logs/info.{}.log"

  debug_log:
    kind: file
    path: "logs/debug.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S)} | {({l}):5.5} | {f}:{L} — {m}{n}"
    filters:
      - kind: threshold
        level: debug

  warn_log:
    kind: file
    path: "logs/warn.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S)} | {({l}):5.5} | {f}:{L} — {m}{n}"
    filters:
      - kind: threshold
        level: warn

  error_log:
    kind: file
    path: "logs/error.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S)} | {({l}):5.5} | {f}:{L} — {m}{n}"
    filters:
      - kind: threshold
        level: error

root:
  level: debug
  appenders:
    - stdout
    - debug_log
    - info_log
    - warn_log
    - error_log

loggers:
  error:
    level: error
    appenders:
      - error_log

  warn:
    level: warn
    appenders:
      - warn_log

  info:
    level: info
    appenders:
      - info_log

  debug:
    level: debug
    appenders:
      - debug_log

  app::backend::db:
    level: info

  app::requests:
    level: info
    appenders:
      - info_log
    additive: false